---

- name: Configure network settings
  set_fact:
    docker_interface_address: "{{ docker_cluster_network | ipaddr(2 + docker_node_id) }}"
    docker_fixed_cidr: "{{ docker_cluster_network | ipsubnet(docker_subnet_prefix_size, 1 + docker_node_id) }}"

- name: Installer le transport HTTPS pour APT
  apt: name=apt-transport-https state=present
  become: true

- name: Installer la clé du repo docker
  apt_key: keyserver=p80.pool.sks-keyservers.net id=58118E89F3A912897C070ADBF76221572C52609D
  become: true

- name: Suppression repository APT Docker (HTTPS)
  apt_repository: repo='deb https://apt.dockerproject.org/repo debian-jessie main' state=absent
  become: true
  tags:
    - fix

- name: Ajout repository APT Docker (HTTP)
  apt_repository: repo='deb http://apt.dockerproject.org/repo debian-jessie main' state=present
  become: true

- name: Desinstaller docker.io
  apt: name=docker.io state=absent
  become: true
  tags:
    - fix

- name: Installer les paquets nécessaires pour Docker
  apt: name={{ item }} state={{docker_package_state}}
  with_items:
    - docker-engine
    - openvswitch-switch
    - bridge-utils
  become: true

#- name: Create bridge
#  script: create-bridge.sh docker0 br0 {{docker_interface_address}} {{docker_mtu}}
#  become: true
#  notify:
#    - restart docker

#- name: Créer les tunnels GRE vers les autres hosts Docker
#  script: create-gre-tunnel.sh br0 {{ (item, inventory_hostname) | gre_name('gre') }} {{ hostvars[item].ansible_eth1.ipv4.address }}
#  with_items: "{{ groups.client | exclude(inventory_hostname) }}"
#  become: true

- name: Ajouter le script de contrôle de Docker
  copy: src=consul/check_docker.sh dest=/etc/consul/ mode=0700
  become: true

- name: Ajouter la config du service Consul pour Docker
  copy: src=consul/service_docker.json dest=/etc/consul/
  become: true
  notify:
    - reload consul config

- name: Créer le répertoire de config systemd pour Docker
  file: name=/etc/systemd/system/docker.service.d state=directory
  become: true

- name: Configurer le deamon Docker
  template: src=docker.service.j2 dest=/etc/systemd/system/docker.service.d/docker.conf
  become: true
  notify:
    - restart systemd
    - restart docker

- name: "Supprimer l'ancien fichier de conf du daemon Docker, non utilisé"
  file: name={{ item }} state=absent
  become: true
  with_items:
    - /etc/systemd/system/docker.service
    - /etc/default/docker
  notify:
    - restart docker
  tags:
    - fix

- name: "Flusher les handlers éventuellement activés, comme le restart de docker"
  meta: flush_handlers

- name: S'assurer que Docker est bien lancé avant de démarrer des containers (comme Docker UI)
  service: name=docker state=started
  become: true

- name: Install Docker Python API
  pip: name=docker-py state=present
  become: true

- name: Docker swarm
  docker:
    name: swarm
    image: swarm
    command: join --addr={{ ansible_eth1.ipv4.address }}:2375 consul://{{ ansible_eth1.ipv4.address }}:{{ consul_http_port }}
    # In Ansible 2.0
    # log_driver: syslog
    state: started
  become: true

- name: Docker swarm master
  docker:
    name: swarm-master
    image: swarm
    command: manage --addr={{ ansible_eth1.ipv4.address }}:2375 consul://{{ ansible_eth1.ipv4.address }}:{{ consul_http_port }}
    ports:
      - "2333:2375"
    # In Ansible 2.0
    # log_driver: syslog
    state: started
  become: true
  when: docker_swarm_master == true

- name: Remove Docker UI if present
  docker:
    state: absent
    image: dockerui/dockerui
    docker_api_version: 1.18
  become: true
  tags:
    - fix
